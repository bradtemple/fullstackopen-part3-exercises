{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","components/ErrorNotification.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","removeName","personsToShow","map","person","key","id","name","number","onClick","window","confirm","console","log","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","className","ErrorNotification","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","filter","toLowerCase","includes","e","target","preventDefault","some","personId","find","p","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1ef19b0.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = ({ newFilter, handleFilterChange }) => {\n  \n  return (\n    <div>\n      filter shown with <input\n        value={newFilter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addName, newName, handleNameChange, newNumber, handleNumberChange }) => (\n  <form onSubmit={addName}>\n    <div>\n      Name: <input\n        value={newName}\n        onChange={handleNameChange} \n      />\n    </div>\n    <div>\n      Number: <input\n        value={newNumber}\n        onChange={handleNumberChange}\n      />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n</form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ removeName, personsToShow }) => (\n  <ul>\n    {personsToShow.map(person => (<li key={person.id}>{person.name}: {person.number} \n      <button onClick={() => {window.confirm(`Delete ${person.name}?`) ? removeName(person) : console.log(`${person.name} not deleted`)}}>delete</button></li>))}\n  </ul>\n)\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default ErrorNotification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport ErrorNotification from './components/ErrorNotification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = e => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleFilterChange = e => {\n    setNewFilter(e.target.value)\n  }\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  const removeName = ({ name, id }) => {\n    personService\n      .remove(id)\n      .then(() => {\n        setMessage(\n          `Removed ${name}`\n        )\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n        setPersons(persons.filter(p => p.id !== id))\n      })\n  }\n\n  const addName = e => {\n    e.preventDefault()\n    if(persons.some(person => person.name === newName)) {\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if(result) {\n        const personId = persons.find(p => p.name === newName).id\n        const updatedObject = {\n          name: newName,\n          number: newNumber\n        }\n        personService\n          .update(personId, updatedObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== personId ? p : returnedPerson))\n            setMessage(\n              `Updated ${newName}`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error => {\n            setErrorMessage(error.response.data.error)            \n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setNewName('')\n            setNewNumber('')\n          })\n          \n      }\n    }\n    else {\n      const nameObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      personService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMessage(\n            `Added ${newName}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          console.log(error.response.data.error)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <ErrorNotification message={errorMessage} />\n      <Filter \n        handleFilterChange={handleFilterChange} \n        newFilter={newFilter}        \n      />\n      <h3>add a new</h3>\n      <PersonForm \n        addName={addName} \n        newName={newName} \n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        personsToShow={personsToShow}\n        removeName={removeName}\n      />   \n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}